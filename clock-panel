import javax.swing.Icon;
import javax.swing.JLabel;
import javax.swing.JPanel;

import java.awt.*;
import java.awt.geom.*;
import java.awt.geom.Point2D.Double;
import java.util.Calendar;
import java.util.GregorianCalendar;
/**
 * 
 * @author anhth
 *Lines and endpoints code from Horstmann
 */
public class ClockPanel extends JPanel{
	
	private final static int WIDTH = 200;
	private Point2D.Double centerPoint;
	private int radius; 
	private int x;
	private int y;
	
	public void paintComponent(Graphics g){
		
		x = (this.getWidth()-WIDTH)/2;
		y = (this.getHeight()-WIDTH)/2;
		Graphics2D g2 = (Graphics2D)g;
		centerPoint = new Point2D.Double(this.getWidth()/2, this.getHeight()/2); 
		radius = WIDTH/2; 
		
		Ellipse2D.Double circle = new Ellipse2D.Double(x, y, WIDTH, WIDTH); 
		
		g2.setColor(Color.PINK);
		g2.fill(circle);
		g2.draw(circle);
		
		// Proportion of radius for length of hands
	      final double TEXT = 0.9;
	      final double SECOND = 0.75;
	      final double MINUTE = 0.65;
	      final double HOUR = 0.55;
	      
	      // Hour numeral locations
	      Point2D.Double noon = endPoint(TEXT, 0);
	      Point2D.Double three = endPoint(TEXT,135);
	      Point2D.Double six = endPoint(TEXT, 90);
	      Point2D.Double nine = endPoint(TEXT, 45);

	      g2.setColor(Color.black);
	      g2.drawString("12", (float) noon.x-3, (float) noon.y+5);
	      g2.drawString("3", (float) three.x-1, (float) three.y);
	      g2.drawString("6", (float) six.x, (float) six.y+2);
	      g2.drawString("9", (float) nine.x-1, (float) nine.y);


	      GregorianCalendar now = new GregorianCalendar();

	      int minutes = now.get(Calendar.MINUTE);
	      int seconds = now.get(Calendar.SECOND);

	      int hours = now.get(Calendar.HOUR);
	      hours = hours % 12; // Change 12 to 0
	      hours = hours * 5;  // Change to ticks on clock

	      // Add in the fraction of the hour, as ticks
	      hours = hours + (int) (5 * minutes / 60.0);  

	      Line2D.Double hourLine
	         = new Line2D.Double(centerPoint, endPoint(HOUR, hours));

	      Line2D.Double minuteLine
	         = new Line2D.Double(centerPoint, endPoint(MINUTE, minutes));

	      Line2D.Double secondLine
	         = new Line2D.Double(centerPoint, endPoint(SECOND, seconds));

	      g2.draw(hourLine);
	      g2.setColor(Color.blue);
	      g2.draw(minuteLine);

	      g2.setColor(Color.red);
	      g2.draw(secondLine);
	      
	     
			
	}
	 private Point2D.Double endPoint(double proportion, int ticks)
	   {
	      double length = proportion * radius;
	      double radians = Math.PI * 6 * ticks / 180;
	      double xEnd = this.getWidth()/2 + length * Math.sin(radians);
	      double yEnd = this.getHeight()/2 - length * Math.cos(radians);

	      return new Point2D.Double(xEnd, yEnd);
	   }
	

}
